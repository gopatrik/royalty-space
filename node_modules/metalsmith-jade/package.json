{
  "name": "metalsmith-jade",
  "description": "A Metalsmith plugin to convert jade files.",
  "repository": {
    "type": "git",
    "url": "git://github.com/Skinkworks/metalsmith-jade.git"
  },
  "author": {
    "name": "Max Bareiss",
    "email": "admin@maxbareiss.com"
  },
  "contributors": [
    {
      "name": "Max Bariess",
      "email": "admin@maxbareiss.com"
    }
  ],
  "version": "0.0.4",
  "license": "MIT",
  "main": "lib/index.js",
  "dependencies": {
    "jade": "1.8.2",
    "debug": "~0.7.4"
  },
  "devDependencies": {
    "mocha": "1.x",
    "metalsmith": "0.x",
    "assert-dir-equal": "0.x"
  },
  "readme": "# metalsmith-jade\n\n  A Metalsmith plugin to convert jade files.\n\n## Installation\n\n    $ npm install metalsmith-jade\n\n## CLI Usage\n\n  Install via npm and then add the `metalsmith-jade` key to your `metalsmith.json` plugins. All options are passed directly to jade. If `options` has a `locals` key, that will be passed along to jade. This is the first step in my quest to make a system that ACTUALLY MAKES IT EASY to develop a website in jade, build it, and put it on static hosting (like one would find in a univeristy). WHY IS THIS SO HARD! (I'm not angry or anything...)\n\n```json\n{\n  \"plugins\": {\n    \"metalsmith-jade\": {\n        \"pretty\":false\n    }\n  }\n}\n```\n\n## Javascript Usage\n\n  Pass `options` to the jade plugin and pass it to Metalsmith with the `use` method:\n  \n```\nvar jade = require('metalsmith-jade');\n\nmetalsmith.use(jade({\n  \"pretty\":false,\n  \"locals\":{\n    \"postName\":\"Totally a good post name\"\n  }\n}));\n```\n  \n### Register a jade filter\n\nSince metalsmith-jade uses the jade runtime located at\n./node_modules/metalsmith-jade/node_modules/jade and not the project specific\none at ./node_modules/jade it is not possible to register filters on jade directly.\nTherefore the regiserFilter method was introduced. The\nmethod accepts the name of a filter and a filter factory method. The filter\nfactory method is passed the jade lang (require('jade')) the jade runtime\n(require('jade/lib/runtime')) and the jade filters (require('jade/lib/filters'))\nand should return a method which will be registered as a jade filter using the\nname passed as the first argument to the registerFilter method.\n\n#### Example\n\n```\nvar jade = require('metalsmith-jade');\n\njade.registerFilter('sample', function(jade_lang, jade_runtime, jade_filters) {\n  return function(text) {\n    // e.g. convert jade markup to html\n    var html = jade_lang.render(text, options);\n\n    // e.g. apply some other jade filter\n    var filtered = jade_filters('fooFilter', text);\n\n    // return the markup to be placed at the filter invocations position\n    return \"foobar\";\n  }  \n});\n```\n\n## Thanks\n\n  This library is a cheap copy of [metalsmith-markdown](https://github.com/segmentio/metalsmith-markdown). Thank you @ianstormtaylor for doing the actual work.\n  \n## License\n\n  MIT (c) 2014 Max Bareiss",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/Skinkworks/metalsmith-jade/issues"
  },
  "homepage": "https://github.com/Skinkworks/metalsmith-jade",
  "_id": "metalsmith-jade@0.0.4",
  "_shasum": "61b928156a955d2d43c4953372efda9c35244fd1",
  "_from": "metalsmith-jade@",
  "_resolved": "https://registry.npmjs.org/metalsmith-jade/-/metalsmith-jade-0.0.4.tgz"
}
